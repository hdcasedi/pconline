# Generated by Django 5.2.5 on 2025-08-28 17:43

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtaildocs', '0014_alter_document_file_size'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlashcardSetPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('mode_creation', models.CharField(choices=[('manual', 'Saisie manuelle'), ('import', 'Import fichier (CSV / TXT)')], default='manual', max_length=10)),
                ('import_strategy', models.CharField(choices=[('append', 'Ajouter'), ('replace', 'Remplacer tout')], default='append', help_text='Lors du prochain enregistrement, importer le fichier selon la stratégie.', max_length=10)),
                ('source_file', models.ForeignKey(blank=True, help_text="CSV (UTF-8 ; ou ,) avec entêtes question,answer[,tags,video_url] ou TXT avec lignes 'question|||answer'.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FlashcardItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', wagtail.fields.RichTextField(blank=True)),
                ('answer', wagtail.fields.RichTextField(blank=True)),
                ('video_url', models.URLField(blank=True)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='flashcard.flashcardsetpage')),
            ],
            options={
                'ordering': ['sort_order', 'id'],
            },
        ),
    ]
